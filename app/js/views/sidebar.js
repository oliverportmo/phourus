// Generated by CoffeeScript 1.6.2
(function() {
  define(["jquery", "underscore", "backbone", "text!html/sidebar.html", "text!html/stream/sidebar-form.html", "js/models/types"], function($, _, Backbone, template, sidebarForm, mTypes) {
    var vSidebar;

    vSidebar = Backbone.View.extend({
      el: "#sidebar",
      initialize: function(options) {
        var self;

        self = this;
        Backbone.Events.on("sidebar", function(params) {
          if (_.isObject(params)) {
            self.type = params.type;
            self.params = params;
          } else {
            self.type = params;
          }
          return self.render();
        });
        return window.onhashchange = function() {};
      },
      hide: function() {
        return this.$el.hide();
      },
      show: function() {
        return this.$el.show();
      },
      render: function() {
        var html, self;

        self = this;
        html = '';
        if (!_.isUndefined(self.sidebar)) {
          self.sidebar.clear();
        }
        this.show();
        if (this.type === '' || _.isUndefined(this.type) || this.type === 'hidden') {
          this.hide();
        } else if (this.type === 'form') {
          require(["js/views/sidebar/form"], function(view) {
            return self.sidebar = new view({
              type: self.post
            });
          });
        } else if (this.type === 'orgs') {
          require(["js/views/sidebar/orgs"], function(view) {
            return self.sidebar = new view(self.params);
          });
        } else {
          require(["js/views/sidebar/" + this.type], function(view) {
            return self.sidebar = new view();
          });
        }
        return this.type = '';
      }
    });
    return vSidebar;
  });

}).call(this);
