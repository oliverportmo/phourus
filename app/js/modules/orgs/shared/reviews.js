// Generated by CoffeeScript 1.6.2
define(["jquery", "underscore", "backbone", "text!html/widgets/posts.html", "js/modules/orgs/collections/reviews", "js/views/alerts", "js/models/types", "text!html/orgs/shared/review.html", "text!html/404/reviews.html"], function($, _, Backbone, template, cReviews, vAlerts, mTypes, tReview, reviews404) {
  var widget;

  widget = Backbone.View.extend({
    initialize: function(options) {
      var self;

      self = this;
      $("#mask").show();
      this.options.id = options.id;
      this.options.page = 1;
      return this.options.limit = 10;
    },
    render: function() {
      var self;

      self = this;
      this.collection = new cReviews(this.options);
      return this.collection.fetch({
        success: function() {
          $("#mask").hide();
          return self.display();
        },
        error: function(collection, response) {
          $("#mask").hide();
          if (response.status === 404) {
            return self.$el.append(_.template(reviews404, {
              auth: false
            }));
          } else {
            return Backbone.Events.trigger("alert", {
              type: "error",
              message: "Reviews could not be loaded",
              response: response,
              location: "modules/orgs/shared/reviews",
              action: "read"
            });
          }
        }
      });
    },
    display: function() {
      var self;

      self = this;
      $(this.el).html("<h2>Reviews</h2>");
      _.each(this.collection.models, function(model) {
        var data;

        data = model.toJSON();
        return $(self.el).append(_.template(tReview, {
          review: data.review,
          pic: self.pic,
          user: data.user.user,
          format_date: self.format_date
        }));
      });
      return this.$el;
    }
  });
  return widget;
});
