// Generated by CoffeeScript 1.6.2
define(["jquery", "underscore", "backbone", "text!html/orgs/shared/posts.html", "js/modules/orgs/collections/community", "js/views/alerts", "js/models/types", "text!html/orgs/shared/users.html", "text!html/orgs/shared/user.html", "text!html/404/users.html"], function($, _, Backbone, template, cCommunity, vAlerts, mTypes, tUsers, tUser, users404) {
  var widget;

  widget = Backbone.View.extend({
    initialize: function(options) {
      var params, self;

      self = this;
      params = {};
      params.org_id = options.id;
      params.type = options.page.slice(0, -1);
      params.mode = 'full';
      this.collection = new cCommunity(params);
      return this.collection.fetch({
        success: function() {
          return self.render();
        },
        error: function(collection, response) {
          if (response.status === 404) {
            return self.$el.html(_.template(users404, {}));
          } else {
            return Backbone.Events.trigger("alert", {
              type: "error",
              message: "Users could not be loaded",
              response: response,
              location: "modules/orgs/shared/users",
              action: "read"
            });
          }
        }
      });
    },
    render: function() {
      var compiled, l, self;

      self = this;
      l = this.collection.models.length;
      compiled = _.template(tUsers, '');
      $(self.el).append(compiled);
      if (l === 0) {
        $(self.el).append('<h3 style="text-align: center;margin: 0px; padding: 0px">No users were found based on your criteria</h3>');
      }
      _.each(this.collection.models, function(model) {
        var user;

        user = model.toJSON();
        user.influence = 48;
        return $(self.el).append(_.template(tUser, {
          user: user,
          pic: self.pic
        }));
      });
      return this.$el;
    }
  });
  return widget;
});
