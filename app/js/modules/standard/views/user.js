// Generated by CoffeeScript 1.6.2
define(["jquery", "underscore", "backbone", "forms", "text!html/standard/user.html", "text!html/headings/user.html", "js/views/sidebar", "js/modules/standard/models/user", "js/models/session"], function($, _, Backbone, forms, template, tHeading, vSidebar, mUser, mSession) {
  var view;

  view = Backbone.View.extend({
    className: "user",
    initialize: function(options) {},
    render: function() {
      var self;

      self = this;
      Backbone.Events.trigger("sidebar", {
        type: 'profile',
        params: this.options
      });
      this.model = new mUser({
        id: this.options.user
      });
      return this.model.fetch({
        success: function() {
          return self.display();
        },
        error: function(error, response) {
          return Backbone.Events.trigger("alert", {
            type: "error",
            message: "Profile could not be loaded",
            response: response,
            location: "modules/standard/views/profile",
            action: "read"
          });
        }
      });
    },
    events: {
      "click ul.tabs a": "tab",
      "click #update_account": "expand",
      "click .save": "save"
    },
    expand: function() {
      if ($("#update").is(':hidden') === true) {
        $("#update").show();
        return $("#update_account").html("Hide Profile Information");
      } else {
        $("#update").hide();
        return $("#update_account").html("Edit Profile Information");
      }
    },
    tab: function(e) {
      var id;

      id = e.currentTarget.id;
      $(".view").hide();
      $(".view#view_" + id).show();
      $("ul.tabs li a").removeClass('selected');
      return $("ul.tabs li a#" + id).addClass('selected');
    },
    display: function() {
      var compiled, container, data, heading, owner, params, schema, totals;

      data = this.model.attributes;
      totals = {
        blogs: 6,
        links: 14,
        ideas: 1,
        checklist: '',
        calculator: '',
        matters: 3,
        subjects: 11,
        questions: 5,
        answers: 7,
        debates: 21,
        bills: 6,
        votes: 22,
        beliefs: 4,
        timeline: 2,
        quotes: 10
      };
      owner = data.id === mSession.get("user_id");
      console.log(owner);
      console.log(data);
      params = {
        user: data.user,
        pic: this.pic,
        totals: totals,
        owner: owner
      };
      compiled = _.template(template, params);
      $(this.el).html(compiled);
      heading = _.template(tHeading, params);
      $(".heading").html(heading);
      schema = {
        "website": "Text",
        "email": "Text",
        "phone": "Text"
      };
      this.form = new Backbone.Form({
        model: this.model,
        schema: schema
      });
      this.form.render();
      container = this.$el.find("#fields");
      container.append(this.form.el);
      return compiled;
    },
    save: function(e) {
      this.form.commit();
      return this.model.save(this.model.changed, {
        success: function(model, response) {
          return Backbone.Events.trigger("alert", {
            type: "complete",
            message: "User information saved successfully",
            response: response,
            location: "modules/stream/views/user",
            action: "update"
          });
        },
        error: function(model, response) {
          return Backbone.Events.trigger("alert", {
            type: "error",
            message: "User information could not be updated",
            response: response,
            location: "modules/stream/views/user",
            action: "update"
          });
        }
      });
    }
  });
  return view;
});
