// Generated by CoffeeScript 1.6.2
define(["jquery", "underscore", "backbone", "forms", "text!html/standard/user.html", "text!html/headings/user.html", "js/views/sidebar", "js/modules/standard/models/user", "js/models/address", "js/models/session", "js/models/types", "js/models/password", "text!html/404/user.html"], function($, _, Backbone, forms, template, tHeading, vSidebar, mUser, mAddress, mSession, mTypes, mPassword, user404) {
  var view;

  view = Backbone.View.extend({
    className: "user",
    initialize: function(options) {},
    render: function() {
      var self;

      self = this;
      Backbone.Events.trigger("sidebar", {
        type: 'default',
        params: this.options
      });
      this.model = new mUser({
        id: this.options.user
      });
      $("#mask").show();
      return this.model.fetch({
        success: function() {
          $("#mask").hide();
          return self.display();
        },
        error: function(error, response) {
          $("#mask").hide();
          return Backbone.Events.trigger("alert", {
            type: "error",
            message: "Profile could not be loaded",
            response: response,
            location: "modules/standard/views/profile",
            action: "read"
          });
        }
      });
    },
    events: {
      "click ul.tabs a": "tab",
      "click #update_account": "expand",
      "click .save": "save"
    },
    expand: function() {
      if ($("#update").is(':hidden') === true) {
        $("#update").show();
        return $("#update_account").html("Hide Profile Information");
      } else {
        $("#update").hide();
        return $("#update_account").html("Edit Profile Information");
      }
    },
    tab: function(e) {
      var id;

      id = e.currentTarget.id;
      $(".view").hide();
      $(".view#view_" + id).show();
      $("ul.tabs li a").removeClass('selected');
      return $("ul.tabs li a#" + id).addClass('selected');
    },
    display: function() {
      var address_schema, basic_schema, compiled, data, detail_schema, heading, owner, params, password_schema;

      data = this.model.attributes;
      owner = data.id === mSession.get("user_id");
      console.log(owner);
      console.log(data);
      params = {
        user: data.user,
        pic: this.pic,
        owner: owner,
        stats: data.stats,
        address: data.address[0]
      };
      compiled = _.template(template, params);
      $(this.el).html(compiled);
      heading = _.template(tHeading, params);
      $(".heading").html(heading);
      this.user = new mUser(this.model.get('user'));
      this.address = new mAddress(this.model.get('address')[0]);
      this.pass = new mPassword();
      basic_schema = mTypes.schema('user_basic');
      detail_schema = mTypes.schema('user_detail');
      address_schema = mTypes.schema('address');
      password_schema = mTypes.schema('password');
      this.basic_form = new Backbone.Form({
        model: this.user,
        schema: basic_schema
      });
      this.detail_form = new Backbone.Form({
        model: this.user,
        schema: detail_schema
      });
      this.address_form = new Backbone.Form({
        model: this.address,
        schema: address_schema
      });
      this.password_form = new Backbone.Form({
        model: this.pass,
        schema: password_schema
      });
      this.basic_form.render();
      this.detail_form.render();
      this.address_form.render();
      this.password_form.render();
      this.$el.find("#user_basic").append(this.basic_form.el);
      this.$el.find("#user_detail").append(this.detail_form.el);
      this.$el.find("#user_address").append(this.address_form.el);
      this.$el.find("#user_password").append(this.password_form.el);
      return compiled;
    },
    save: function(e) {
      var id, model, self;

      self = this;
      id = e.currentTarget.id;
      if (id === 'save_address') {
        this.address_form.commit();
        model = this.address_form.model.changed;
        this.update_address(model);
      }
      if (id === 'save_basic') {
        this.basic_form.commit();
        model = this.basic_form.model.changed;
        this.update_user(model);
      }
      if (id === 'save_detail') {
        this.detail_form.commit();
        model = this.detail_form.model.changed;
        this.update_user(model);
      }
      if (id === 'save_password') {
        this.password_form.commit();
        model = this.password_form.model.changed;
        return this.update_password(model);
      }
    },
    update_user: function(model) {
      var self;

      self = this;
      $("#mask").show();
      model.id = this.user.get('id');
      return this.user.save(model, {
        success: function(model, response) {
          $("#mask").hide();
          Backbone.Events.trigger("alert", {
            type: "complete",
            message: "User information saved successfully",
            response: response,
            location: "modules/standard/views/user",
            action: "update"
          });
          return self.render();
        },
        error: function(model, response) {
          $("#mask").hide();
          if (response.status === 404) {
            return self.$el.html(_.template(user404, {}));
          } else {
            Backbone.Events.trigger("alert", {
              type: "error",
              message: "User information could not be updated",
              response: response,
              location: "modules/standard/views/user",
              action: "update"
            });
            return self.render();
          }
        }
      });
    },
    update_address: function(model) {
      var self;

      self = this;
      $("#mask").show();
      console.log(model);
      return this.address.save(model, {
        success: function(model, response) {
          $("#mask").hide();
          Backbone.Events.trigger("alert", {
            type: "complete",
            message: "Address information saved successfully",
            response: response,
            location: "modules/standard/views/user",
            action: "update"
          });
          return self.render();
        },
        error: function(model, response) {
          $("#mask").hide();
          if (response.status === 404) {
            return self.$el.html(_.template(user404, {}));
          } else {
            Backbone.Events.trigger("alert", {
              type: "error",
              message: "Address information could not be updated",
              response: response,
              location: "modules/standard/views/user",
              action: "update"
            });
            return self.render();
          }
        }
      });
    },
    update_password: function(model) {
      var pass, self;

      self = this;
      $("#mask").show();
      model.id = this.user.get('id');
      console.log(model);
      pass = new mPassword(model);
      return pass.save(model, {
        success: function(model, response) {
          $("#mask").hide();
          Backbone.Events.trigger("alert", {
            type: "complete",
            message: "Password changed successfully",
            response: response,
            location: "modules/standard/views/user",
            action: "update"
          });
          return self.render();
        },
        error: function(model, response) {
          $("#mask").hide();
          if (response.status === 404) {
            return self.$el.html(_.template(user404, {}));
          } else if (response.status === 403) {
            return Backbone.Events.trigger("alert", {
              type: "error",
              message: "Password could not be changed, current password incorrect",
              response: response,
              location: "modules/standard/views/user",
              action: "update"
            });
          } else {
            Backbone.Events.trigger("alert", {
              type: "error",
              message: "Password could not be changed",
              response: response,
              location: "modules/standard/views/user",
              action: "update"
            });
            return self.render();
          }
        }
      });
    }
  });
  return view;
});

/*
<h3>User's Statistics</h3>
<ul id="stats" class="tabs">
	<li><a href="javascript:void(0)" id="earth" class="selected">Earth</a></li>
	<li><a href="javascript:void(0)" id="mind">Mind</a></li>
	<li><a href="javascript:void(0)" id="voice">Voice</a></li>
	<li><a href="javascript:void(0)" id="self">Self</a></li>
  <li><a href="javascript:void(0)" id="social" >Social</a></li>
</ul>
<div style="background-color: #fff">
	<table id="view_earth" class="view" style="display: table;">
		<colgroup><col class="sidebar-form"><col width="200"><col></colgroup>
		<tbody>
			<tr><td>Blogs:</td><td><%= totals.blogs %></td><td>The current profile's Blog count</td></tr>
			<tr><td>Events:</td><td><%= totals.ideas %></td><td>The current profile's Ideas count</td></tr>
		</tbody>
	</table>
		
	<table id="view_mind" class="view" style="display: none;">
		<colgroup><col class="sidebar-form"><col width="200"><col></colgroup>
		<tbody>
			<tr><td>Subjects:</td><td><%= totals.subjects %></td><td>The current profile's Subject count</td></tr>
			<tr><td>Questions:</td><td><%= totals.questions %></td><td>The current profile's Scores</td></tr>
			<tr><td>Answers:</td><td><%= totals.answers %></td><td>The current profile's Course count</td></tr>
		</tbody>
	</table>
	
	<table id="view_voice" class="view" style="display: none;">
		<colgroup><col class="sidebar-form"><col width="200"><col></colgroup>
		<tbody>
			<tr><td>Debates:</td><td><%= totals.debates %></td><td>The current profile's Discussion count</td></tr>
			<tr><td>Bills:</td><td><%= totals.bills %></td><td>The current profile's Debate count</td></tr>
			<tr><td>Votes:</td><td><%= totals.votes %></td><td>The current profile's Representative count</td></tr>
		</tbody>
	</table>
	
	<table id="view_self" class="view" style="display: none;">
		<colgroup><col class="sidebar-form"><col width="200"><col></colgroup>
		<tbody>
			<tr><td>Beliefs:</td><td><%= totals.beliefs %></td><td>The current profile's Rank summary</td></tr>
			<tr><td>Timeline:</td><td><%= totals.timeline %></td><td>The current profile's Beliefs count</td></tr>
			<tr><td>Quotes:</td><td><%= totals.quotes %></td><td>The current profile's Timeline Event count</td></tr>
        </tbody>
  </table>
    
  <table id="view_social" class="view" style="display: none;">
		<colgroup><col class="sidebar-form"><col width="200"><col></colgroup>
		<tbody>
			<tr><td>Comments:</td><td>247</td><td>The current profile's Checklist summary</td></tr>
			<tr><td>Thumbs:</td><td>431+/142-</td><td>The current profile's Calculator grade</td></tr>
			<tr><td>Views:</td><td>3,451</td><td>The current profile's Endorsement count</td></tr>
		</tbody>
	</table>
</div>
<br clear="all"><br />
*/

