// Generated by CoffeeScript 1.6.2
define(["jquery", "underscore", "backbone", "js/modules/stream/models/post", "text!html/stream/post.html", "text!html/headings/post.html", "js/models/types", "js/models/session", "js/modules/stream/views/interact"], function($, _, Backbone, model, template, tHeading, mTypes, mSession, vInteract) {
  var view;

  view = Backbone.View.extend({
    className: "post",
    initialize: function(options) {
      _.bindAll(this);
      return this.load(options.id);
    },
    events: {
      "click .back": "back"
    },
    back: function() {
      return Backbone.Events.trigger("back", {});
    },
    load: function(id) {
      var self;

      Backbone.Events.trigger("sidebar", "single");
      this.model = new model({
        id: id
      });
      self = this;
      return this.model.fetch({
        success: function() {
          return self.render();
        },
        error: function(model, response) {
          if (response.status === 404) {
            self.$el.html('<h2 style="text-align: center">Post not found</h2>');
            Backbone.Events.trigger("alert", {
              type: "message",
              message: "Post could not be found",
              response: response,
              location: "modules/stream/views/single",
              action: "read"
            });
          }
          if (response.status === 503) {
            return Backbone.Events.trigger("alert", {
              type: "error",
              message: "Post could not be loaded",
              response: response,
              location: "modules/stream/views/single",
              action: "read"
            });
          }
        }
      });
    },
    render: function() {
      var compiled, data, element, heading, owner, params, type;

      data = this.model.toJSON();
      if (!_.isUndefined(data.meta)) {
        type = data.meta.type;
        element = mTypes.get_parent(type);
        owner = data.meta.user_id === mSession.get("user_id");
        params = {
          address: data.address[0],
          meta: data.meta,
          post: data.post,
          stats: data.stats,
          user: data.user,
          element: element,
          owner: owner,
          pic: this.pic,
          format_date: this.format_date
        };
        compiled = _.template(template, params);
        this.$el.html(compiled);
        heading = _.template(tHeading, params);
        $(".heading").html(heading);
        this.subviews("#interact", new vInteract(this.options));
        return compiled;
      }
    }
  });
  return view;
});
