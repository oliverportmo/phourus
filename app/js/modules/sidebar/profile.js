// Generated by CoffeeScript 1.6.2
define(["jquery", "underscore", "backbone", "text!html/sidebar/profile.html", "js/models/types", "js/models/session", "js/models/follow"], function($, _, Backbone, template, mTypes, mSession, model) {
  var view;

  view = Backbone.View.extend({
    el: "#sidebar",
    clasName: "profile",
    initialize: function(options) {
      var params, self;

      self = this;
      params = {};
      params.target_id = options.user;
      params.user_id = mSession.get("user_id");
      this.model = new model(params);
      return this.model.fetch({
        success: function(model, response) {
          if (response.length > 1) {
            return Backbone.Events.trigger("alert", {
              type: "error",
              message: "Duplicate follow found",
              response: response,
              location: "modules/sidebar/profile",
              action: "read"
            });
          } else {
            self.following = 1;
            return self.render();
          }
        },
        error: function(model, response) {
          if (response.status === 404) {
            self.following = 0;
            return self.render();
          } else {
            return Backbone.Events.trigger("alert", {
              type: "message",
              message: "There was an error loading follow info",
              response: response,
              location: "modules/sidebar/profile",
              action: "read"
            });
          }
        }
      });
    },
    events: {
      "click .follow": "follow",
      "click .unfollow": "unfollow"
    },
    follow: function() {
      return console.log('follow');
      /*
      @model.save data, 
        success: (model, response) ->
        
        error: (model, response) ->
      */

    },
    unfollow: function() {
      return console.log(this.model);
      /*
      @model.destroy {user_id: , 
        success: (model, response) ->
      
        error: (model, response) ->
      */

    },
    render: function() {
      var compiled, data;

      data = {};
      data.authorized = 0;
      data.following = this.following;
      compiled = _.template(template, {
        data: data
      });
      $(this.el).append(compiled);
      return compiled;
    }
  });
  return view;
});
